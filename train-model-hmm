#!/usr/bin/env python3
import sys
import argparse
import pickle
from hmm import HMMTagger
from utils import SPLReader, SentenceReader

def parse_args():
    parser = argparse.ArgumentParser(
        description="Trains HMM model for POS tagging", 
        epilog="Author: Matous Machacek <machacekmatous@gmail.com>")
    
    parser.add_argument("train",
            help="A labeled file with training data.",
            type=SPLReader,
            )
    
    parser.add_argument("model",
            help="A file where the created model will be stored. Omit for stdout.",
            nargs='?',
            default=sys.stdout.buffer,
            type=argparse.FileType('wb'),
            )
    
    parser.add_argument("--heldout",
            help="A labeled file with heldout data used to train lambda parameters (linear interpolation smoothing).",
            type=SPLReader,
            default=None,
            )
    
    parser.add_argument("--unlabeled",
            help="An unlabeled file for unsupervised learning.",
            type=SentenceReader,
            default=None,
            )    

    return parser.parse_args()

def main():
    args = parse_args()
    tagger = HMMTagger(n=3)
    tagger.train_parameters(args.train)
    if args.heldout:
        tagger.train_lambdas(args.heldout)
    if args.unlabeled:
        tagger.train_unlabeled(args.unlabeled)
    pickle.dump(tagger, args.model)

if __name__ == '__main__':
    main()
